
package inventario;

import BaseDatos.ConexionActualizarTempSalida;
import BaseDatos.ConexionConsultarDecimales;
import BaseDatos.ConexionCrearSalida;
import BaseDatos.ConexionEmpresas;
import BaseDatos.ConexionOperacionesSalidas;
import BaseDatos.ConexionVerConceptos;
import BaseDatos.ConexionVerServicios;
import Reportes.ReporteSalida;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class Salida_Inventario extends javax.swing.JDialog {
    DefaultTableModel modelo;
    Iterator lista1;
    Iterator lista2;
    Iterator lista3;
    List<String> descripcion_concepto=new ArrayList<>();
    List<Integer> codigo_concepto=new ArrayList<>();
    ConexionVerConceptos conceptos=new ConexionVerConceptos();
    List<String> descripcion_servicios =new ArrayList<>();
    List<Integer> codigo_servicios=new ArrayList<>();
    ConexionVerServicios servicios= new ConexionVerServicios();
    ConexionEmpresas secciones=new ConexionEmpresas();
    
    List<Integer> existencias_Actuales=new ArrayList<>();
    int continuar=0;
    List<Double> existencias_actualizadas=new ArrayList<>();
    List<Double> existencias_obtenidas=new ArrayList<>();
    //fecha
    Date fecha= new Date();
   
    java.sql.Date fechasql = new java.sql.Date(fecha.getTime());
    int codigo_seccion;
    String nombre_recibido;
    String codigo_recibido;
    String nombre_seccion;
    Double obtenido;
    int existencia_unidad;//aqui guardo la existencia de cada articulo al momento de guardarlo
   
   
    int estado_decimal=0;//no se ha presionado el punto; 1 si se presiona el punto para llevar el control del decimal en el campo
    int tope=0;//cantidad de decimales programados
    int cantidad_numero_campo=0; //variable que suma la cantidad de enteros+el punto+cantidad de decimales programadas
    //variables para la cantidad de decimales
    int decimal_campo=0;
    int decimal_cantidad=0;
    ConexionConsultarDecimales decimales=new ConexionConsultarDecimales();
    //variables para recibir datos cuando se ha seleccionado modificar una salida
    int cod_servicio_salida_rec;
    List<Double> cantidad_articulos_rec;
    List<Double> valor_pedido_rec;
    List<Integer>  cod_articulos_rec;
    List<String> nombre_articulos_rec;
    int cod_concepto_rec;
    List<Double> costos_art_rec;
    int numero_documento_rec=0;
    public Dimension resolucion;//variable para leer el ancho y alto de la ventana
    //para darle formato al campo al momento de realizar la multiplicacion de cantidad*costo unitaroio
    int consecutivo=0;
 public Salida_Inventario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        resolucion=super.getToolkit().getScreenSize();
        this.setSize(resolucion);
        secciones.consulta();
        codigo_seccion=secciones.codigo_empresa();
        nombre_seccion=secciones.nombre_empresa();
        modelo= (DefaultTableModel)Tabla_datos.getModel();//para poder manipular la tabla
        conceptos.setTipo(0);//1 cuando es concepto de entrada y 0 cuando es concepto de salida
        conceptos.consulta();
        descripcion_concepto=conceptos.descripcion();
        codigo_concepto=conceptos.codigo();
        lista1=descripcion_concepto.iterator();
        lista3=codigo_concepto.iterator();
        while(lista1.hasNext())
                {
                    Combo_Conceptos.addItem(lista3.next()+"-"+lista1.next());
                    
                }
        servicios.consulta();
        descripcion_servicios=servicios.descripcion();
        codigo_servicios=servicios.codigo();
        lista2=descripcion_servicios.iterator();
        while(lista2.hasNext())
        {
            Combo_Servicio.addItem(lista2.next());
            
        }
        
        decimales.setSeccion(codigo_seccion);
        decimales.consulta();
        decimal_campo=decimales.getDecimalCampo();
        decimal_cantidad=decimales.getDecimalTotal();
        tope=decimal_campo;
    }//constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Etiq_encabezado = new javax.swing.JLabel();
        Etiq_Ventana = new javax.swing.JLabel();
        Separador2 = new javax.swing.JSeparator();
        Etiq_Articulo = new javax.swing.JLabel();
        Etiq_Cantidad = new javax.swing.JLabel();
        Etiq_Concepto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_datos = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        Etiq_Servicio = new javax.swing.JLabel();
        Campo_Despacho = new javax.swing.JTextField();
        Combo_Servicio = new javax.swing.JComboBox();
        Boton_Buscar = new javax.swing.JButton();
        Etiq_codigo = new javax.swing.JLabel();
        Etiq_nombre = new javax.swing.JLabel();
        Combo_Conceptos = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        etiqueta_costo = new javax.swing.JLabel();
        Panel1 = new javax.swing.JPanel();
        Boton_Guardar = new javax.swing.JButton();
        Boton_Limpiar = new javax.swing.JButton();
        Panel2 = new javax.swing.JPanel();
        Boton_Registrar = new javax.swing.JButton();
        Boton_Eliminar_Fila = new javax.swing.JButton();
        Boton_Cancelar = new javax.swing.JButton();
        Etiq_Cantidad1 = new javax.swing.JLabel();
        Campo_Pedido = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Etiq_encabezado.setText("<html><body><br><center>Sistema Administrativo de Inventario <br>HOSPITAL DR. SAMUEL DARIO MALDONADO</body></html>");

        Etiq_Ventana.setText("                                                  Salidas de Inventario");

        Separador2.setToolTipText("");
        Separador2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Articulo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        Etiq_Articulo.setText("Articulo: ");

        Etiq_Cantidad.setText("Despacho:");

        Etiq_Concepto.setText("Concepto:");

        Tabla_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Pedido", "Despacho", "Precio Unitario", "Precio Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla_datos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla_datosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla_datos);

        Etiq_Servicio.setText("Servicio:");

        Campo_Despacho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Campo_DespachoKeyTyped(evt);
            }
        });

        Boton_Buscar.setText("Buscar");
        Boton_Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_BuscarActionPerformed(evt);
            }
        });

        Etiq_codigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        Etiq_nombre.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel1.setText("Costo:");

        Boton_Guardar.setText("Guardar");
        Boton_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_GuardarActionPerformed(evt);
            }
        });
        Panel1.add(Boton_Guardar);

        Boton_Limpiar.setText("Limpiar");
        Boton_Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_LimpiarActionPerformed(evt);
            }
        });
        Panel1.add(Boton_Limpiar);

        Boton_Registrar.setText("Registrar");
        Boton_Registrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_RegistrarActionPerformed(evt);
            }
        });
        Panel2.add(Boton_Registrar);

        Boton_Eliminar_Fila.setText("Eliminar Fila");
        Boton_Eliminar_Fila.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_Eliminar_FilaActionPerformed(evt);
            }
        });
        Panel2.add(Boton_Eliminar_Fila);

        Boton_Cancelar.setText("Cancelar");
        Boton_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Boton_CancelarActionPerformed(evt);
            }
        });
        Panel2.add(Boton_Cancelar);

        Etiq_Cantidad1.setText("Pedido:");

        Campo_Pedido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                Campo_PedidoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Separador2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1)
                                    .addComponent(Panel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Etiq_Servicio)
                                    .addComponent(Etiq_Cantidad)
                                    .addComponent(Etiq_Concepto))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Combo_Conceptos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(462, 462, 462))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Combo_Servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Campo_Despacho, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel1)
                                                .addGap(18, 18, 18)
                                                .addComponent(etiqueta_costo, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(Campo_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Etiq_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Etiq_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(Etiq_Articulo)
                                        .addGap(39, 39, 39)
                                        .addComponent(Boton_Buscar)))
                                .addGap(215, 215, 215))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Etiq_encabezado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(122, 122, 122)
                                .addComponent(Etiq_Ventana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Etiq_Cantidad1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Etiq_encabezado, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(Etiq_Ventana, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(Separador2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Etiq_Articulo)
                    .addComponent(Boton_Buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Etiq_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Etiq_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Etiq_Cantidad1)
                    .addComponent(Campo_Pedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Etiq_Cantidad)
                        .addComponent(Campo_Despacho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(etiqueta_costo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Etiq_Concepto)
                    .addComponent(Combo_Conceptos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Etiq_Servicio)
                    .addComponent(Combo_Servicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(Panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Panel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Boton_RegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_RegistrarActionPerformed
        // TODO add your handling code here:
    //para guardar los articulos
    List<Integer> codigo_articulo=new ArrayList<>();
    List<Double> valor_despacho=new ArrayList<>();
    List<Double> valor_pedido=new ArrayList<>();
    List<Double> precio_articulo=new ArrayList<>();
    List<Double> total_articulo=new ArrayList<>();
    int cantidad_articulos=0;
    int concepto_salida;
    int servicio_salida;
    Double total_operacion=0.0;//variable usada para guardar el total del valor movido por concepto
           
                int filas=modelo.getRowCount();
                
                for (int i=0; i<filas; i++)
                {
                    codigo_articulo.add(Integer.parseInt(Tabla_datos.getValueAt(i, 0).toString()));
                    valor_despacho.add(Double.parseDouble(Tabla_datos.getValueAt(i, 2).toString()));//omito la fila de nombre de articulo, ya que el nombre lo obtengo por el codigo
                    valor_pedido.add(Double.parseDouble(Tabla_datos.getValueAt(i, 3).toString()));
                    precio_articulo.add(Double.parseDouble(Tabla_datos.getValueAt(i, 4).toString()));
                    total_articulo.add(valor_despacho.get(i)*precio_articulo.get(i));
                    cantidad_articulos++;
                    
                }
                 for(int i=0; i<filas; i++)
        {
           
        total_operacion = total_operacion + total_articulo.get(i);
         
        }
                
                concepto_salida=codigo_concepto.get(Combo_Conceptos.getSelectedIndex());
                servicio_salida=codigo_servicios.get(Combo_Servicio.getSelectedIndex());
            if(cantidad_articulos<=0)
            {
                JOptionPane.showMessageDialog(null, "Debe haber al menos un articulo", "Error", JOptionPane.ERROR_MESSAGE);
            }
            if(cantidad_articulos>0)
            {
                ConexionCrearSalida salida=new ConexionCrearSalida();
                ConexionOperacionesSalidas operaciones=new ConexionOperacionesSalidas();
                salida.setCantidadArticulo(valor_despacho);
                salida.setFechaDocumento(fechasql);
                salida.setServicio(servicio_salida);
                salida.setCantidad(cantidad_articulos);
                salida.setValorDespacho(valor_pedido);
                salida.setConcepto(concepto_salida);
                salida.setSeccion(codigo_seccion);
                salida.setCodigoArticulo(codigo_articulo);
                salida.setPrecioArticulo(precio_articulo);
                salida.setTotalOperacion(total_operacion);
                salida.setNumeroDocumento(numero_documento_rec);
                salida.setConsecutivo(consecutivo);
                if(numero_documento_rec==0)
                {
                 salida.documento();
                }
                if(numero_documento_rec!=0)
                {
                 salida.actualizar_documento();
                }
                
                 
                
                if(salida.respuesta()>0)
                {
                   salida.historial();
                  
                   if(salida.getResultFinal()>0)
                   {
                       operaciones.setCodigoConsultaSalida(codigo_articulo);
                       operaciones.existencias();
                       existencias_obtenidas=operaciones.obtenerExistencia();
                      
                       for(int i=0; i<valor_despacho.size(); i++)
                       {
                           existencias_actualizadas.add(existencias_obtenidas.get(i)-valor_despacho.get(i));
                       }//for
                       
                       operaciones.setExistenciaNuevo(existencias_actualizadas);
                       operaciones.setFecha(fechasql);
                       operaciones.setCodigoActualizar(codigo_articulo);
                       operaciones.setDocumento("SALIDA");
                       operaciones.Actualizarexistencias();
                       if(operaciones.getResultadoOperacion()>0)
                       {
                           ConexionActualizarTempSalida temp=new ConexionActualizarTempSalida();
                           temp.setDocumento(numero_documento_rec);
                           temp.setSeccion(codigo_seccion);
                           temp.actualizarTempDoc();
                           temp.actualizarArtDoc();
                       //aqui en el if uso el operador || ya que si es una entrada
                           //sin ningun tipo de informacion desde temporal
                           //temp.resultado sera ==0
                               if(temp.resultado()>0 || operaciones.getResultadoOperacion()>0)
                               {
                                     modelo.setRowCount(0);
                                    JOptionPane.showMessageDialog(null,"Informacion Ingresada Satisfactoriamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                                   
                                    Combo_Conceptos.setEnabled(true);
                                    Combo_Servicio.setEnabled(true);
                                   
                                    //genero el reporte
                                        
                                        ReporteSalida reporte=new ReporteSalida();
                                        reporte.llamarReporte();
                                        
                                       
                               }//if temp
                               else{
                                   JOptionPane.showMessageDialog(null," Fallo al actualizar los temporales \n Consulte al desarrollador", "Error grave", JOptionPane.ERROR_MESSAGE);
                               }
                       
                       }//if
                       else
                       {
                           JOptionPane.showMessageDialog(null,"Informacion No ingresada. Fallo actualizar las existencias \n Consulte al desarrollador", "Error grave", JOptionPane.ERROR_MESSAGE);
                       }
                       
                   }
                   if(salida.getResultFinal()<=0 && operaciones.getResultadoOperacion()<0)
                   {
                       JOptionPane.showMessageDialog(null,"Error al ingresar. No se guardo la informacion", "Error Grave", JOptionPane.INFORMATION_MESSAGE);
                   }
                   
                }
                if(salida.respuesta()<=0)
                {
                    JOptionPane.showMessageDialog(null, "Se ha producido un error al ingresar el documento", "Error", JOptionPane.ERROR_MESSAGE);
                 
                }
            }
       /* }
        catch(Exception E)
        {
            JOptionPane.showMessageDialog(null, "se ha producido el siguiente error: "+E+"\n en Salida Inventario" , "Error", JOptionPane.ERROR_MESSAGE);
             
        }*/
    }//GEN-LAST:event_Boton_RegistrarActionPerformed

    private void Boton_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_CancelarActionPerformed
        // TODO add your handling code here:
         int opcion= JOptionPane.showConfirmDialog(null," ¿Seguro desea Salir?. ¡No se conservara nada que no haya guardado!", "Confirmacion de Cancelar", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        //opcion 0= Si, 1=No
         if (opcion==0)
         {
             this.dispose();
         }//if
    }//GEN-LAST:event_Boton_CancelarActionPerformed

    private void Boton_BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_BuscarActionPerformed
        // TODO add your handling code here:
       Ver_Articulos ventana=new Ver_Articulos(null, true);
       ventana.setHabilitacion(0);
       ventana.InformacionArticulos();
       ventana.setResizable(false);
       ventana.setLocationRelativeTo(null);
       ventana.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
       ventana.setVisible(true);
       nombre_recibido=ventana.getNombre();
       codigo_recibido=ventana.getCodigo();
       Etiq_nombre.setText(nombre_recibido);
       Etiq_codigo.setText(codigo_recibido);
       
       ConexionOperacionesSalidas consulta=new ConexionOperacionesSalidas();
       consulta.setCodigoConsulta(Integer.parseInt(codigo_recibido));
       consulta.precios();
      // consulta.existencias();//existencias
       consulta.existenciasUnidad();
      obtenido=consulta.obtenerPrecioUnidad();
      existencia_unidad=consulta.existenciaUnidad();
      etiqueta_costo.setText(obtenido.toString());//convierto a String para poder mostrar en la eqtiqueta
       
    }//GEN-LAST:event_Boton_BuscarActionPerformed

    private void Campo_DespachoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Campo_DespachoKeyTyped
        // TODO add your handling code here:
       
       
        
          char caracter = evt.getKeyChar();
        if(((caracter < '0') || (caracter > '9')) && (caracter != '\b' /*corresponde a BACK_SPACE*/) && (caracter !='.'))
      {
         JOptionPane.showMessageDialog(null, "Este campo solo se admiten numeros", "Revisar", JOptionPane.ERROR_MESSAGE);
         evt.consume();
      }
         else
        {
             if(caracter=='.')
             {
                 cantidad_numero_campo=Campo_Despacho.getText().length()+1;//le sumo 1 por el caracter punto
                 cantidad_numero_campo=cantidad_numero_campo+tope;
                 estado_decimal=1;
             }
        }//else
             if(estado_decimal==1)
             {
                
                 
             if(Campo_Despacho.getText().length()==cantidad_numero_campo)
             {
                 
                 JOptionPane.showMessageDialog(null, "Alcanzo los decimales configurados para la seccion", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                 evt.consume();
             }//if estado
             }//if
     
    }//GEN-LAST:event_Campo_DespachoKeyTyped

    private void Boton_LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_LimpiarActionPerformed
        // TODO add your handling code here:
        
        Etiq_codigo.setText("");
        Etiq_nombre.setText("");
        Campo_Despacho.setText("");
    }//GEN-LAST:event_Boton_LimpiarActionPerformed

    private void Boton_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_GuardarActionPerformed
        // TODO add your handling code here:
        
        if(Campo_Despacho.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Recuerde Indicar la cantidad","Revise", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            if(existencia_unidad < Float.parseFloat(Campo_Despacho.getText().trim()))
            {
                JOptionPane.showMessageDialog(null, "No hay existencia suficiente del articulo para la salida", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                Double temporal_format;// variables serviran para formatear bien el costo del articulo
                Double temporal;
                temporal=(Double.parseDouble(Campo_Despacho.getText().trim()))* (obtenido);
                temporal_format=(Math.round (temporal*Math.pow(10, decimal_cantidad))) / Math.pow(10, decimal_cantidad) ;

                modelo.addRow(new Object[]{codigo_recibido, nombre_recibido, Campo_Despacho.getText().trim(),Campo_Pedido.getText().trim(), obtenido, temporal_format });
                Campo_Despacho.setText("");
                Etiq_codigo.setText("");
                Etiq_nombre.setText("");
                etiqueta_costo.setText("");
                Combo_Conceptos.setEnabled(false);
                Combo_Servicio.setEnabled(false);
                }//else
        }//else
    }//GEN-LAST:event_Boton_GuardarActionPerformed

    private void Boton_Eliminar_FilaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Boton_Eliminar_FilaActionPerformed
        // TODO add your handling code here:
        if (Tabla_datos.getSelectedRow()== -1)
        {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla para borrar la linea", "Revisar", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
       modelo.removeRow(Tabla_datos.getSelectedRow());
        }
        
    }//GEN-LAST:event_Boton_Eliminar_FilaActionPerformed

    private void Tabla_datosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla_datosMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2)
        {
            System.out.println("se hizo click en el codigo: "+Tabla_datos.getValueAt(0, 0).toString());
        }
    }//GEN-LAST:event_Tabla_datosMouseClicked

    private void Campo_PedidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Campo_PedidoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_Campo_PedidoKeyTyped
public void setCodServicioRec(int recibido)
{
    cod_servicio_salida_rec=recibido;
}
public void setCodConceptoRec(int recibido)
{
    cod_concepto_rec=recibido;
}
public void setCostosDoc(List<Double> recibido)
{
    costos_art_rec=recibido;
}
public void setCodigoArticuloRec(List<Integer> recibido)
{
    cod_articulos_rec=recibido;
}
public void setNombreArticuloRec(List<String> recibido)
{
    nombre_articulos_rec=recibido;
}
public void setCantidadArticuloRec(List<Double> recibido)
{
    cantidad_articulos_rec=recibido;
}
public void setValorDespachoRec(List<Double> recibido)
{
    valor_pedido_rec=recibido;
    
}
public void setDocumentoRec(int recibido)
{
    numero_documento_rec=recibido;
}
public void setConsecutivo(int recibido){
    consecutivo=recibido;
}
    public void llenar_formulario()
{

   for(int i=0; i<cod_articulos_rec.size(); i++)
        {
         double temporal= cantidad_articulos_rec.get(i)*costos_art_rec.get(i); 
            
        modelo.addRow(new Object[] {cod_articulos_rec.get(i), nombre_articulos_rec.get(i) ,  valor_pedido_rec.get(i), cantidad_articulos_rec.get(i), costos_art_rec.get(i), (temporal)});
        }
   
}
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salida_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salida_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salida_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salida_Inventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Salida_Inventario dialog = new Salida_Inventario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Boton_Buscar;
    private javax.swing.JButton Boton_Cancelar;
    private javax.swing.JButton Boton_Eliminar_Fila;
    private javax.swing.JButton Boton_Guardar;
    private javax.swing.JButton Boton_Limpiar;
    private javax.swing.JButton Boton_Registrar;
    private javax.swing.JTextField Campo_Despacho;
    private javax.swing.JTextField Campo_Pedido;
    private javax.swing.JComboBox Combo_Conceptos;
    private javax.swing.JComboBox Combo_Servicio;
    private javax.swing.JLabel Etiq_Articulo;
    private javax.swing.JLabel Etiq_Cantidad;
    private javax.swing.JLabel Etiq_Cantidad1;
    private javax.swing.JLabel Etiq_Concepto;
    private javax.swing.JLabel Etiq_Servicio;
    private javax.swing.JLabel Etiq_Ventana;
    private javax.swing.JLabel Etiq_codigo;
    private javax.swing.JLabel Etiq_encabezado;
    private javax.swing.JLabel Etiq_nombre;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JSeparator Separador2;
    private javax.swing.JTable Tabla_datos;
    private javax.swing.JLabel etiqueta_costo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
